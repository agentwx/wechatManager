#! /usr/local/bin/python3
# -*- coding: utf-8 -*-
# 
from utils.wechatRecord import *
import random, hashlib, json, os
import time, traceback
from utils.wechatConfig import *
from utils.wechatLog import *

'''
dic = {
	'CONTENT_LENGTH' : 'asa',
	'dsd': "122"
}


if not dic.get('CONTENT_LENGTH', 0):
	print(dic.get('CONTENT_LENGTH', 0))
	requestBodySize = 1
#requestBodySize = int(dic.get('CONTENT_LENGTH', 0))

print(requestBodySize)

def en(msg):
	return msg.encode('utf-8')

ret = ['aa', 'bb', 'cc']
print(ret)

r = map(lambda m:m.encode('utf-8'), ret)

print(list(r))

def parsePathInfo(pathInfo):
	try:
		filepath, lastfilename = os.path.split(pathInfo)
		print("filepath", filepath)
		shotname, extension = os.path.splitext(lastfilename)
		return shotname, extension
	except:
		return None, None

funcName = "getUserKey"
importFunc = "from initWeChat import %s as execfunc" % (funcName)


def importModule(module):
	glob = {}
	loc = {}
	try:
		exec(module, glob, loc)
		for item in loc:
			return loc[item]
	except:
		print(traceback.format_exc())
		return False

print(importModule(importFunc))


dataDic = {}
dataDic['userKey'] = "12134124124"

ret = {}
try:
    fd = open(MYFIFO, 'w')
    wechatLog.debug('open success')
    fd.write(json.dumps(dataDic))
    wechatLog.debug('write success')

    fd.close()
except:
    wechatLog.debug(traceback.format_exc())
    ret['ret'] = -4;
    ret['msg'] = 'server error'
    print(json.dumps(ret))



class A():
	def func2(self):
		print("func2")

def func3(self):
	print("func3")

aa = A()
A.func2 = func3


func1 = aa.func2

func1()
aa.func2()
  '''
print(str(time.time()))
#os.mkdir("aaa")

bb = b'\xe2\x96\x88\r1532415417.8430524'
bbb = b'\xe2\x96\x88\r'
print(bbb.decode('utf-8'))